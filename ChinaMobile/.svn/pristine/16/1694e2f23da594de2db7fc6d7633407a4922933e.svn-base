package action;

import java.util.ArrayList;
import java.util.List;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpSession;

import org.apache.struts2.ServletActionContext;
import org.springframework.context.ApplicationContext;
import org.springframework.context.support.ClassPathXmlApplicationContext;

import com.alibaba.fastjson.JSONObject;

import service.gjservice;
import vo.ChildOrderVo;
import vo.MainOrderVo;
import vo.ManagerVo;
import vo.PhoneNumberVo;
import vo.WareFlashSaleVo;
import vo.WareVo;

public class gjaction {
	JSONObject json = new JSONObject();

	ApplicationContext ac = new ClassPathXmlApplicationContext("config-resource/aplicationContext.xml");
	gjservice is = (gjservice) ac.getBean("gjService");

	// 手机号码
	PhoneNumberVo pn = new PhoneNumberVo();

	// 用户对象
	private ManagerVo manager;
	private String msg;// 登陆失败返回一个信息

	// 子订单
	private ChildOrderVo child;

	// 主订单
	private MainOrderVo mains;

	public String list() {
		System.out.println("gjService");
		System.out.println(is.cs());
		return null;
	}

	// 查询轮播图
	public String allRotationImage() {
		List rlist = is.selRotationlmage();
		json.put("rlist", rlist);
//		System.out.println(json.toJSONString());
		return "success";
	}

	// 查询商品表
	public String selwares() {

		List tj = new ArrayList();
		tj = is.selware("tj", "启用");
//		System.out.println(tj.size());
		List rx = new ArrayList();
		rx = is.selware("rx", "启用");
//		System.out.println(rx.size());
		List xp = new ArrayList();
		xp = is.selware("xp", "启用");
//		System.out.println(xp.size());

		List rp = new ArrayList();
		rp = is.selware("rp", "启用");
//		System.out.println(rp.size());

		// 查询状态为抢购的商品
		List qg = new ArrayList();
		qg = is.selware("type", "抢购");

		// 查询有参加团购活动的商品
		List group = new ArrayList();
		group = is.selgroup();
//		System.out.println(group.size());
		System.out.println(1);
		// 根据销量查询商品
		List xl = new ArrayList();
		xl = is.selwarebycount();
//		System.out.println(xl.size());
		System.out.println(1);
		// 根据库存查询商品
		List kc = new ArrayList();
		kc = is.selwarebystock();
		System.out.println(1);
		json.put("tj", tj);

		json.put("rx", rx);
		json.put("xp", xp);
		json.put("rp", rp);
		json.put("tg", group);
		json.put("xl", xl);
		json.put("kc", kc);

		json.put("qg", qg);
//		System.out.println(tj.toString());
		return "success";
	}

	// 查询电话号码表
	public String allphonenumber() {
//		System.out.println("查询电话号码表");
		List list1 = is.selphonenumber("1");
		List list2 = is.selphonenumber("2");
		List list3 = is.selphonenumber("3");

		json.put("list1", list1);
		json.put("list2", list2);
		json.put("list3", list3);

		return "success";
	}

	// 查询公告与活动表
	public String allnotice() {
		List list1 = is.selnotice("商城公告");
		List list2 = is.selnotice("促销活动");
		json.put("list1", list1);
		json.put("list2", list2);
		return "success";
	}

	// 查询电话套餐表
	public String allpsm() {
		List list = is.selphonesetmeal();
		json.put("list", list);
		System.out.println(json.toJSONString());
		return "success";
	}

	// 用户登录
	public String managerlogin() {
		System.out.println("用户登录");
		if (manager.getLogin_name() == null || manager.getLogin_name().equals("") || manager.getPassword() == null
				|| manager.getPassword().equals("")) {
			msg = "请检查是否输入了账号跟密码！";
			// 失败直接返回页面
			return "tologin";
		}

		ManagerVo m = is.selmanager(manager);
		if (m == null) {
			// 当数据库后台没有查到该账户的时候，返回null的时候在传一个值去前台显示
			msg = "账号密码错误，请重试！";
			return "tologin";
		}
		HttpServletRequest request = ServletActionContext.getRequest();
		HttpSession session = request.getSession();

		// 查找到对象并封装在session里面
		session.setAttribute("m", m);
		System.out.println("登录成功！");

		return "grzx";

	}

	// 查询子订单
	public String childorder() {
		child = is.selchildorder(child.getId());

		// 根据主订单id查询所对应的订单
		mains = is.selbymainid(child.getMain_order_id());

		json.put("morder", mains);

		json.put("child", child);

		return "success";
	}

	// 特惠专区
	public String thzq() {
		List list = is.selactivity();

		// 限时抢购
		WareFlashSaleVo xs = (WareFlashSaleVo) is.selxsqg();
		WareVo xsw = new WareVo();
		xsw = is.selwarebyid(xs.getWare_id());
		System.out.println("查出" + xsw.getSale_count());

		// 秒杀
		WareFlashSaleVo ms = (WareFlashSaleVo) is.selms();
		WareVo msw = new WareVo();
		msw = is.selwarebyid(ms.getWare_id());

		json.put("xs", xs);
		json.put("xsw", xsw);
		json.put("ms", ms);
		json.put("msw", msw);

		json.put("list", list);
		return "success";
	}

	public JSONObject getJson() {
		return json;
	}

	public void setJson(JSONObject json) {
		this.json = json;
	}

	public PhoneNumberVo getPn() {
		return pn;
	}

	public void setPn(PhoneNumberVo pn) {
		this.pn = pn;
	}

	public ManagerVo getManager() {
		return manager;
	}

	public void setManager(ManagerVo manager) {
		this.manager = manager;
	}

	public String getMsg() {
		return msg;
	}

	public void setMsg(String msg) {
		this.msg = msg;
	}

	public ChildOrderVo getChild() {
		return child;
	}

	public void setChild(ChildOrderVo child) {
		this.child = child;
	}

	public MainOrderVo getMains() {
		return mains;
	}

	public void setMains(MainOrderVo mains) {
		this.mains = mains;
	}

}